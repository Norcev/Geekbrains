# homework  easy

# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.


fruits = ["яблоко", "банан", "киви", "арбуз"]
print('TASK1:')
right_offset = len(max(fruits, key=len))
for index, item in enumerate(fruits, start=1):
    print(f'{index}.', item.rjust(right_offset))


# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.

print('TASK2:')
a = ['яблоко', 'банан', 'киви', 'арбуз']
d = ['яблоко', 'банан', 'манго', 'груша', 'помидор', 'дыня']
c = set(a) - set(d)
print(c)


# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.



number_list = [7, 3, 8, 3, 2, 6, 1, 10, 12]
new_list = []

for number in number_list:
    if number % 2 == 0:
        new_list.append(number / 4)
    else:
        new_list.append(number * 2)

print('TASK3:\n')
print(number_list)
print(new_list)


#Homework NORMAL

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]


old_list = [2, -5, 8, 9, -25, 25, 4]
new_list = []

for number in old_list:
    if number > 0 and (number ** 0.5) % 1 == 0:
        new_list.append(int(number ** 0.5))
print('TASK4:')
print(old_list)
print(new_list)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

import datetime

days = {'01': 'первое',
       '02': 'второе',
       '03': 'третье',
       '04': 'четвёртое',
       '05': 'пятое',
       '06': 'шестое',
       '07': 'седьмое',
       '08': 'восьмое',
       '09': 'девятое',
       '10': 'десятое',
       '11': 'одиннадцатое',
       '12': 'двенадцатое',
       '13': 'тринадцатое',
       '14': 'четырнадцатое',
       '15': 'пятнадцатое',
       '16': 'шестнадцатое',
       '17': 'семнадцатое',
       '18': 'восемнадцатое',
       '19': 'девятнадцатое',
       '20': 'двадцатое',
       '21': 'двадцать первое',
       '22': 'двадцать второе',
       '23': 'двадцать третье',
       '24': 'двадцать четвёртое',
       '25': 'двадцать пятое',
       '26': 'двадцать шестое',
       '27': 'двадцать седьмое',
       '28': 'двадцать восьмое',
       '29': 'двадцать девятое',
       '30': 'тридцатое',
       '31': 'тридцать первое'}

months = {'01': 'января',
          '02': 'февраля',
          '03': 'марта',
          '04': 'апреля',
          '05': 'мая',
          '06': 'июня',
          '07': 'июля',
          '08': 'августа',
          '09': 'сентября',
          '10': 'октября',
          '11': 'ноября',
          '12': 'декабря'}

date = str(input("В ведите дату в формате dd.mm.yyyy: "))

try:
    datetime.datetime.strptime(date, '%d.%m.%Y')
except ValueError:
    print("Не корректный ввод даты.")

day, month, year = date.split('.')
print('TASK6: ')
print(f'{days[day]} {months[month]} {year} года')


# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

from random import randint

size = int(input('Введите количесво случаных элементов: '))
random_numbers = list()

for number in range(size):
    random_numbers.append(randint(-100, 100))
print('TASK7:')
print(random_numbers)


# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

lst = [1, 2, 4, 5, 6, 2, 5, 2]
unique_number = list()
duplicates = set()

for number in lst:
    if number not in unique_number:
        unique_number.append(number)
    else:
        duplicates.add(number)

no_duplicates = unique_number.copy()
for i in duplicates:
    no_duplicates.remove(i)
# no_duplicates = set(unique_number) - duplicates
print('TASK8:')
print(lst, unique_number, no_duplicates, sep='\n')
